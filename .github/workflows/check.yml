name: Check
on: [ push, pull_request ]

jobs:

  test:
    name: Run with test inputs
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
        cargo_args:
          - ""
          - "--release"
        runs_on:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
    runs-on: ${{ matrix.runs_on }}
    permissions: {}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Update env
        run: echo 'CARGO_ARGS=${{ matrix.cargo_args }} --color always' >> "${GITHUB_ENV}"
      - name: Update rust
        run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - name: Build project
        run: cargo build --verbose --release
      - name: Run benchmark script
        run: ./benchmark.sh
      - name: Run benchmark script
        run: ./benchmark.sh

  lint_code:
    name: Clippy
    runs-on: ubuntu-latest
    permissions: { }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run cargo clippy
        run: ./clippy --color=always -- -D warnings

  improve_code:
    name: Improve and format the code
    runs-on: ubuntu-latest
    if: github.ref_type == 'branch'
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Improve the code
        run: ./clippy --fix
      - name: Format the code
        run: cargo fmt
      - name: Update env
        run: |
          D=$(python -c "print((_dt:=__import__('datetime')).datetime.now(tz=_dt.timezone.utc).replace(minute=0, second=0, microsecond=0).isoformat())")
          echo "GIT_AUTHOR_DATE=${D}" >> "${GITHUB_ENV}"
          echo "GIT_COMMITTER_DATE=${D}" >> "${GITHUB_ENV}"
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "format code"
          commit_user_name: Bot
          commit_user_email:
          commit_author: Bot <>
